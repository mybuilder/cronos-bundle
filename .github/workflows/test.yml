name: Test

on: [push]

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - php-versions: 8.0
            symfony-versions: 4.4.*
          - php-versions: 8.0
            symfony-versions: 5.4.*
          - php-versions: 8.0
            symfony-versions: 5.4.*
          - php-versions: 8.0
            symfony-versions: 6.0.*
          - php-versions: 8.1
            symfony-versions: 6.2.*
          - php-versions: 8.2
            symfony-versions: 6.2.*

    name: PHP ${{ matrix.php-versions }} Test with Symfony ${{ matrix.symfony-versions }}
    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      - name: Checkout
        uses: actions/checkout@v3

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: xdebug #optional

      # https://github.com/marketplace/actions/setup-php-action#problem-matchers
      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      # https://github.com/marketplace/actions/setup-php-action#problem-matchers
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ matrix.php-versions }}-${{ matrix.symfony-versions }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php-versions }}-${{ matrix.symfony-versions }}-

      - name: Validate Composer.json
        run: composer validate

      - name: Install dependencies
        env:
            SYMFONY_REQUIRE: ${{ matrix.symfony-version }}
        run: |
            composer global config --no-plugins allow-plugins.symfony/flex true
            composer global require --no-progress --no-scripts --no-plugins symfony/flex
            composer update --no-interaction --prefer-dist --optimize-autoloader

      ## —— Test ✅ ———————————————————————————————————————————————————————————
      - name: Run Tests
        run: php bin/phpunit --coverage-text
